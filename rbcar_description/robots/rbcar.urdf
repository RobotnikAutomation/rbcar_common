<?xml version="1.0" encoding="utf-8"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rbcar.urdf.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rbcar">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- check -->
  <!--xacro:property name="suspension_joint_damping" value="0.2" />
  <xacro:property name="suspension_joint_friction" value="0.7" /-->
  <!-- check -->
  <!-- xacro:macro name="rubber_wheel" params="name parent *origin reflect hq" -->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- Includes -->
  <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
  <!-- ***************** -->
  <!-- Global parameters -->
  <!-- ***************** -->
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <link name="robot_base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!--
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <box size="0.001 0.001 0.001" />
          </geometry>
      </collision>
-->
  </link>
  <joint name="robot_base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.3195"/>
    <!-- height is the clearance -->
    <parent link="robot_base_footprint"/>
    <child link="robot_base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="robot_base_link">
    <inertial>
      <mass value="125.0"/>
      <origin xyz="0.917 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.917 0 0"/>
      <geometry>
        <mesh filename="package://rbcar_description/meshes/bases/rbcar_chassis_hq.stl"/>
      </geometry>
      <material name="gray">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0.917 0 0"/>
      <geometry>
        <mesh filename="package://rbcar_description/meshes/bases/rbcar_chassis.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
  </gazebo>
  <joint name="robot_left_front_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_left_steering_link"/>
    <origin xyz="1.916615                    0.60901                    0.0"/>
  </joint>
  <link name="robot_left_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="robot_left_steering_joint" type="revolute">
    <parent link="robot_left_steering_link"/>
    <child link="robot_left_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <!-- this applies if we are setting the left wheel -->
    <limit effort="50" lower="-0.60822457" upper="0.785398163" velocity="25"/>
  </joint>
  <transmission name="robot_left_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_left_steering_joint">
      <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>-->
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_left_steering_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_left_steering_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_left_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_left_front_axle" type="continuous">
    <parent link="robot_left_front_axle_carrier"/>
    <child link="robot_left_front_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="robot_left_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_left_front_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_left_front_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_left_front_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_left_front_wheel">
    <visual>
      <origin rpy="-1.57079633 0 3.14159265" xyz="0                        0                        -0.0825 "/>
      <geometry>
        <!--cylinder radius="0.3195" length="0.245"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      -0.0025"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.271789666667" ixy="0" ixz="0" iyy="0.271789666667" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_left_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="robot_right_front_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_right_steering_link"/>
    <origin xyz="1.916615                    -0.60901                    0.0"/>
  </joint>
  <link name="robot_right_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="robot_right_steering_joint" type="revolute">
    <parent link="robot_right_steering_link"/>
    <child link="robot_right_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <!-- this applies if we are setting the right wheel -->
    <limit effort="50" lower="-0.785398163" upper="0.60822457" velocity="25"/>
  </joint>
  <transmission name="robot_right_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_right_steering_joint">
      <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>-->
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_right_steering_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_right_steering_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_right_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_right_front_axle" type="continuous">
    <parent link="robot_right_front_axle_carrier"/>
    <child link="robot_right_front_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="robot_right_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_right_front_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_right_front_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_right_front_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_right_front_wheel">
    <visual>
      <origin rpy="1.57079633 0 3.14159265" xyz="0                        0                        0.0825 "/>
      <geometry>
        <!--cylinder radius="0.3195" length="0.245"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      0.0025"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.271789666667" ixy="0" ixz="0" iyy="0.271789666667" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_right_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="robot_left_rear_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_left_rear_axle_carrier"/>
    <origin xyz="0.083385                    0.60901                    0.0"/>
  </joint>
  <link name="robot_left_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_left_rear_axle" type="continuous">
    <parent link="robot_left_rear_axle_carrier"/>
    <child link="robot_left_rear_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="robot_left_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_left_rear_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_left_rear_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_left_rear_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_left_rear_wheel">
    <visual>
      <origin rpy="-1.57079633 0 3.14159265" xyz="0                        0                        -0.0825 "/>
      <geometry>
        <!--cylinder radius="0.3195" length="0.245"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      -0.0025"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.271789666667" ixy="0" ixz="0" iyy="0.271789666667" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_left_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="robot_right_rear_shock" type="fixed">
    <parent link="robot_base_link"/>
    <child link="robot_right_rear_axle_carrier"/>
    <origin xyz="0.083385                    -0.60901                    0.0"/>
  </joint>
  <link name="robot_right_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="robot_right_rear_axle" type="continuous">
    <parent link="robot_right_rear_axle_carrier"/>
    <child link="robot_right_rear_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="robot_right_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="robot_right_rear_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="robot_right_rear_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="robot_right_rear_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="robot_right_rear_wheel">
    <visual>
      <origin rpy="1.57079633 0 3.14159265" xyz="0                        0                        0.0825 "/>
      <geometry>
        <!--cylinder radius="0.3195" length="0.245"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/polaris/right_front_wheel.STL"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      0.0025"/>
      <geometry>
        <cylinder length="0.245" radius="0.3195"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.271789666667" ixy="0" ixz="0" iyy="0.271789666667" iyz="0" izz="0.463546"/>
    </inertial>
  </link>
  <gazebo reference="robot_right_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- SENSORS -->
  <joint name="robot_top_3d_laser_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="1.163 0.0 1.602"/>
    <parent link="robot_base_link"/>
    <child link="robot_top_3d_laser_base_link"/>
  </joint>
  <link name="robot_top_3d_laser_base_link">
    <visual>
      <!-- origin xyz="0 0 0" rpy="0 0 1.5708"/ -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/rslidar.stl"/>
      </geometry>
      <material name="black_alu"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/rslidar.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.840"/>
      <origin xyz="0 0 0.04135"/>
      <inertia ixx="0.0013104203" ixy="0" ixz="0" iyy="0.0013104203" iyz="0" izz="0.00166334"/>
    </inertial>
  </link>
  <joint name="robot_top_3d_laser_joint" type="fixed">
    <parent link="robot_top_3d_laser_base_link"/>
    <child link="robot_top_3d_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.038"/>
  </joint>
  <link name="robot_top_3d_laser_link"/>
  <gazebo reference="robot_top_3d_laser_link">
    <sensor name="robot_top_3d_laser_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0.0</pose>
      <visualize>false</visualize>
      <update_rate>20.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- for a high quality simulation -->
            <samples>3600.0</samples>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>15.0</samples>
            <min_angle>-0.261799387799</min_angle>
            <max_angle>0.261799387799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.4</min>
          <max>150.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>none</type>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="robot_top_3d_laser_controller">
        <topicName>top_3d_laser/points</topicName>
        <frameName>/robot_top_3d_laser_link</frameName>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="robot_imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="0.319 0.018 0.676"/>
    <parent link="robot_base_link"/>
    <child link="robot_imu_link"/>
  </joint>
  <link name="robot_imu_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.01"/>
      <mass value="0.05"/>
      <inertia ixx="3.33333333333e-06" ixy="0" ixz="0" iyy="3.33333333333e-06" iyz="0" izz="3.33333333333e-06"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".001 .001 .001"/>
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="robot_imu_controller">
      <alwaysOn>true</alwaysOn>
      <topicName>imu/data</topicName>
      <serviceName>robot_imuimu/service</serviceName>
      <bodyName>robot_imu_link</bodyName>
      <frameId>robot_imu_link</frameId>
      <updateRate>50.0</updateRate>
      <gaussianNoise>0.00</gaussianNoise>
      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawGaussianNoise>0.0</yawGaussianNoise>
      <!-- angular velocities parameters -->
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <!-- linear accelerations parameters -->
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
    </plugin>
  </gazebo>
  <joint name="robot_front_laser_base_joint" type="fixed">
    <origin rpy="3.14159265359 0 0" xyz="2.15679 0 0.05433"/>
    <parent link="robot_base_link"/>
    <child link="robot_front_laser_base_link"/>
  </joint>
  <link name="robot_front_laser_base_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="0.106 0.094 0.152"/>-->
        <!--<cylinder radius="0.058" length="0.152"/>-->
        <mesh filename="package://robotnik_sensors/meshes/sick_outdoorscan3.dae"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/sick_outdoorscan3.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1.15"/>
      <origin rpy="0 0 0" xyz="0 0 0.075"/>
      <inertia ixx="0.0033370125" ixy="0" ixz="0" iyy="0.00335838333333" iyz="0" izz="0.00238289583333"/>
    </inertial>
  </link>
  <joint name="robot_front_laser_joint" type="fixed">
    <parent link="robot_front_laser_base_link"/>
    <child link="robot_front_laser_link"/>
    <origin rpy="0 0 0" xyz="0.0 0 0.110"/>
  </joint>
  <link name="robot_front_laser_link"/>
  <gazebo reference="robot_front_laser_link">
    <sensor name="robot_front_laser_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>12.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>541</samples>
            <resolution>1</resolution>
            <min_angle>-1.5</min_angle>
            <max_angle>1.5</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>40.0</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.03</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="robot_front_laser_controller">
        <topicName>front_laser/scan</topicName>
        <frameName>/robot_front_laser_link</frameName>
        <!-- if not global (leading /) sets the current namespace as a prefix (/ns/name_laser_link) -->
      </plugin>
    </sensor>
  </gazebo>
  <!-- ANTENNA GPS -->
  <joint name="robot_gps_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.491 0 1.503"/>
    <parent link="robot_base_link"/>
    <child link="robot_gps_base_link"/>
  </joint>
  <link name="robot_gps_base_link">
    <inertial>
      <origin rpy="0 0 0" xyz="0.0 0 0.015"/>
      <mass value="0.2"/>
      <inertia ixx="0.00012435" ixy="0" ixz="0" iyy="0.00012435" iyz="0" izz="0.0002187"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="gps_color">
        <color rgba="1 1 1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/antenna_3GO16.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/antenna_3GO16.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="robot_gps_base_link">
    <material>Gazebo/White</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="robot_gps_controller">
      <alwaysOn>1</alwaysOn>
      <updateRate>5</updateRate>
      <bodyName>robot_gps_base_link</bodyName>
      <!-- must be the link of the gps device, not the base_link or base_footprint -->
      <frameId>robot_gps_base_link</frameId>
      <topicName>gps/fix</topicName>
      <!-- GPS coordinates -->
      <referenceLatitude>-0.467738</referenceLatitude>
      <referenceLongitude>39.551218</referenceLongitude>
      <!-- To set heading in ENU orientation (degrees) -->
      <referenceHeading>90</referenceHeading>
      <velocityTopicName>gps/fix_velocity</velocityTopicName>
      <drift>0.0 0.0 0.0</drift>
      <!--<drift>0.0001 0.0001 0.0001</drift>-->
      <!--<drift>0.3 0.3 0.3</drift>-->
      <gaussianNoise>0.00001 0.00001 0.00001</gaussianNoise>
      <!--<gaussianNoise>0.00001 0.00001 0.00001</gaussianNoise>-->
      <velocityDrift>0.00001 0.00001 0.00001</velocityDrift>
      <!--<velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>-->
      <velocityGaussianNoise>0.00001 0.00001 0.00001</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <!--Gazebo plugins-->
  <gazebo>
    <plugin filename="librobotnik_gazebo_ground_truth_odom.so" name="ground_truth_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>robot_base_link</bodyName>
      <frameName>base_footprint_gt</frameName>
      <worldBodyName>world</worldBodyName>
      <worldFrameName>robot_odom</worldFrameName>
      <topicName>odom_gt</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <xyzOffset>0.0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <applyOffset>False</applyOffset>
      <broadcastTF>True</broadcastTF>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="librobotnik_gazebo_ground_truth_odom.so" name="gps_ground_truth_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>robot_gps_base_link</bodyName>
      <frameName>gps_base_link_gt</frameName>
      <worldBodyName>world</worldBodyName>
      <worldFrameName>world</worldFrameName>
      <topicName>odom_gt</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <xyzOffset>0.0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <applyOffset>False</applyOffset>
      <broadcastTF>True</broadcastTF>
    </plugin>
  </gazebo>
</robot>
